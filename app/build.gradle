plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
}

android {
    compileSdkVersion ApplicationConfigration.CompileSdkVersion

    defaultConfig {
        applicationId ApplicationConfigration.ApplicationId
        minSdkVersion ApplicationConfigration.MinSdkVersion
        targetSdkVersion ApplicationConfigration.CompileSdkVersion
        versionCode ApplicationConfigration.VersionCode
        versionName ApplicationConfigration.VersionName
        testInstrumentationRunner TestInstrumentedRunner.Runner
    }

    flavorDimensions "core"

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            minifyEnabled false
            shrinkResources false
            firebaseAppDistribution {
                artifactType="APK"
                releaseNotes ="#1 - ðŸš€ Hey , this is jus a demo , for uploading final apk when we push o specific branch in version Control ðŸ”¥ ."
                testers="mohammedmorsefcis@gmail.com, mohamed.morse@expertapps.com.sa"
            }
        }

        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled false
            shrinkResources false
            firebaseAppDistribution {
                artifactType="APK"
                releaseNotes ="#1 - ðŸš€ Hey , this is jus a demo , for uploading final apk when we push o specific branch in version Control ðŸ”¥ ."
                testers="mohammedmorsefcis@gmail.com, mohamed.morse@expertapps.com.sa"
            }
        }

    }

    productFlavors {

        sharedTestingResources {
            dimension "core"
            applicationIdSuffix = ".mock"

            buildConfigField("String", "LEFT", ApplicationConfigration.EnglishName)
            buildConfigField("String", "RIGHT", ApplicationConfigration.ArabicName)
            resValue("string", "app_name", ApplicationConfigration.ApplicationName)

            buildConfigField("String", "BASE_URL", ApplicationConfigration.BaseUrl)
            buildConfigField("String", "AUTH_URL", ApplicationConfigration.AuthUrl)
            buildConfigField("String", "PRODUCTS_URL", ApplicationConfigration.ProductsUrl)
            firebaseAppDistribution {
                artifactType="APK"
                releaseNotes ="#1 - ðŸš€ Hey , this is jus a demo , for uploading final apk when we push o specific branch in version Control ðŸ”¥ ."
                testers="mohammedmorsefcis@gmail.com, mohamed.morse@expertapps.com.sa"
            }
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
    }

    packagingOptions {
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

}

dependencies {

    implementation KotlinLibrary.Library
    implementation AndroidLibrary.Core
    implementation MaterialDesignLibraries.Libraries
    implementation MaterialDesignLibraries.CustomViews
    implementation Coroutine.Libraries
    // Retrofit
    implementation NetworkLibraries.Retrofit
    // Jetpack
    implementation Jetpack.LifeCycle
    // DI
    implementation DI.Koin
    // Image Loader
    implementation ImageLoader.Glide
    annotationProcessor ImageLoader.GlideAnnotateProcessor
    // Firebase
    implementation platform(Firebase.Pom)
    implementation Firebase.Analtics
    // For Local Test
    testImplementation TestingLibraries.Junit
    testImplementation TestingLibraries.Truth
    testImplementation TestingLibraries.JunitExtensions
    testImplementation TestingLibraries.Core
    testImplementation TestingLibraries.MockK
    testImplementation TestingLibraries.ArcCore
    testImplementation TestingLibraries.CoroutineTest
    // For SharedSourceSet Resources That helped us for testing
    sharedTestingResourcesImplementation TestingLibraries.Junit
    sharedTestingResourcesImplementation TestingLibraries.CoroutineTest
    // For Instrumented Test
    androidTestImplementation TestingLibraries.Core
    androidTestImplementation UITestingLibraries.Espresso
    androidTestImplementation UITestingLibraries.AndroidXRuleTest


}